/*
 * Pipedrive API v1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetActivityTypesResponse200AllOfDataInner {
    /// The ID of the activity type
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// The name of the activity type
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Icon graphic to use for representing this activity type
    #[serde(rename = "icon_key", skip_serializing_if = "Option::is_none")]
    pub icon_key: Option<IconKey>,
    /// A designated color for the activity type in 6-character HEX format (e.g. `FFFFFF` for white, `000000` for black)
    #[serde(rename = "color", skip_serializing_if = "Option::is_none")]
    pub color: Option<String>,
    /// An order number for the activity type. Order numbers should be used to order the types in the activity type selections.
    #[serde(rename = "order_nr", skip_serializing_if = "Option::is_none")]
    pub order_nr: Option<i32>,
    /// A string that is generated by the API based on the given name of the activity type upon creation
    #[serde(rename = "key_string", skip_serializing_if = "Option::is_none")]
    pub key_string: Option<String>,
    /// The active flag of the activity type
    #[serde(rename = "active_flag", skip_serializing_if = "Option::is_none")]
    pub active_flag: Option<bool>,
    /// Whether the activity type is a custom one or not
    #[serde(rename = "is_custom_flag", skip_serializing_if = "Option::is_none")]
    pub is_custom_flag: Option<bool>,
    /// The creation time of the activity type
    #[serde(rename = "add_time", skip_serializing_if = "Option::is_none")]
    pub add_time: Option<String>,
    /// The update time of the activity type
    #[serde(rename = "update_time", skip_serializing_if = "Option::is_none")]
    pub update_time: Option<String>,
}

impl GetActivityTypesResponse200AllOfDataInner {
    pub fn new() -> GetActivityTypesResponse200AllOfDataInner {
        GetActivityTypesResponse200AllOfDataInner {
            id: None,
            name: None,
            icon_key: None,
            color: None,
            order_nr: None,
            key_string: None,
            active_flag: None,
            is_custom_flag: None,
            add_time: None,
            update_time: None,
        }
    }
}

/// Icon graphic to use for representing this activity type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum IconKey {
    #[serde(rename = "task")]
    Task,
    #[serde(rename = "email")]
    Email,
    #[serde(rename = "meeting")]
    Meeting,
    #[serde(rename = "deadline")]
    Deadline,
    #[serde(rename = "call")]
    Call,
    #[serde(rename = "lunch")]
    Lunch,
    #[serde(rename = "calendar")]
    Calendar,
    #[serde(rename = "downarrow")]
    Downarrow,
    #[serde(rename = "document")]
    Document,
    #[serde(rename = "smartphone")]
    Smartphone,
    #[serde(rename = "camera")]
    Camera,
    #[serde(rename = "scissors")]
    Scissors,
    #[serde(rename = "cogs")]
    Cogs,
    #[serde(rename = "bubble")]
    Bubble,
    #[serde(rename = "uparrow")]
    Uparrow,
    #[serde(rename = "checkbox")]
    Checkbox,
    #[serde(rename = "signpost")]
    Signpost,
    #[serde(rename = "shuffle")]
    Shuffle,
    #[serde(rename = "addressbook")]
    Addressbook,
    #[serde(rename = "linegraph")]
    Linegraph,
    #[serde(rename = "picture")]
    Picture,
    #[serde(rename = "car")]
    Car,
    #[serde(rename = "world")]
    World,
    #[serde(rename = "search")]
    Search,
    #[serde(rename = "clip")]
    Clip,
    #[serde(rename = "sound")]
    Sound,
    #[serde(rename = "brush")]
    Brush,
    #[serde(rename = "key")]
    Key,
    #[serde(rename = "padlock")]
    Padlock,
    #[serde(rename = "pricetag")]
    Pricetag,
    #[serde(rename = "suitcase")]
    Suitcase,
    #[serde(rename = "finish")]
    Finish,
    #[serde(rename = "plane")]
    Plane,
    #[serde(rename = "loop")]
    Loop,
    #[serde(rename = "wifi")]
    Wifi,
    #[serde(rename = "truck")]
    Truck,
    #[serde(rename = "cart")]
    Cart,
    #[serde(rename = "bulb")]
    Bulb,
    #[serde(rename = "bell")]
    Bell,
    #[serde(rename = "presentation")]
    Presentation,
}

impl Default for IconKey {
    fn default() -> IconKey {
        Self::Task
    }
}

