/*
 * Pipedrive API v1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetRecentsResponse200DataInnerAnyOf9Data {
    /// The ID of the product
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// The name of the product
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The product code
    #[serde(rename = "code", skip_serializing_if = "Option::is_none")]
    pub code: Option<String>,
    /// The description of the product
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The unit in which this product is sold
    #[serde(rename = "unit", skip_serializing_if = "Option::is_none")]
    pub unit: Option<String>,
    /// The tax percentage
    #[serde(rename = "tax", skip_serializing_if = "Option::is_none")]
    pub tax: Option<f32>,
    /// The category of the product
    #[serde(rename = "category", skip_serializing_if = "Option::is_none")]
    pub category: Option<String>,
    /// Whether this product will be made active or not
    #[serde(rename = "active_flag", skip_serializing_if = "Option::is_none")]
    pub active_flag: Option<bool>,
    /// Whether this product can be selected in deals or not
    #[serde(rename = "selectable", skip_serializing_if = "Option::is_none")]
    pub selectable: Option<bool>,
    /// The first letter of the product name
    #[serde(rename = "first_char", skip_serializing_if = "Option::is_none")]
    pub first_char: Option<String>,
    /// The visibility of the product. If omitted, the visibility will be set to the default visibility setting of this item type for the authorized user.
    #[serde(rename = "visible_to", skip_serializing_if = "Option::is_none")]
    pub visible_to: Option<i32>,
    /// The ID of the user who will be marked as the owner of this product. When omitted, authorized user ID will be used.
    #[serde(rename = "owner_id", skip_serializing_if = "Option::is_none")]
    pub owner_id: Option<i32>,
    /// The count of files
    #[serde(rename = "files_count", skip_serializing_if = "Option::is_none")]
    pub files_count: Option<i32>,
    /// The date and time when the product was added to the deal
    #[serde(rename = "add_time", skip_serializing_if = "Option::is_none")]
    pub add_time: Option<String>,
    /// The date and time when the product was updated to the deal
    #[serde(rename = "update_time", skip_serializing_if = "Option::is_none")]
    pub update_time: Option<String>,
    /// Array of objects, each containing: `currency` (string), `price` (number), `cost` (number, optional), `overhead_cost` (number, optional). Note that there can only be one price per product per currency. When `prices` is omitted altogether, a default price of 0 and a default currency based on the company's currency will be assigned.
    #[serde(rename = "prices", skip_serializing_if = "Option::is_none")]
    pub prices: Option<Vec<serde_json::Value>>,
}

impl GetRecentsResponse200DataInnerAnyOf9Data {
    pub fn new() -> GetRecentsResponse200DataInnerAnyOf9Data {
        GetRecentsResponse200DataInnerAnyOf9Data {
            id: None,
            name: None,
            code: None,
            description: None,
            unit: None,
            tax: None,
            category: None,
            active_flag: None,
            selectable: None,
            first_char: None,
            visible_to: None,
            owner_id: None,
            files_count: None,
            add_time: None,
            update_time: None,
            prices: None,
        }
    }
}


