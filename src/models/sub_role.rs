/*
 * Pipedrive API v1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// SubRole : The details of the sub-role



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SubRole {
    /// The ID of the parent role
    #[serde(rename = "parent_role_id", skip_serializing_if = "Option::is_none")]
    pub parent_role_id: Option<i32>,
    /// The name of the role
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The ID of the role
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// Whether the role is active or not
    #[serde(rename = "active_flag", skip_serializing_if = "Option::is_none")]
    pub active_flag: Option<bool>,
    /// The number of users assigned to this role
    #[serde(rename = "assignment_count", skip_serializing_if = "Option::is_none")]
    pub assignment_count: Option<String>,
    /// The number of sub-roles
    #[serde(rename = "sub_role_count", skip_serializing_if = "Option::is_none")]
    pub sub_role_count: Option<String>,
}

impl SubRole {
    /// The details of the sub-role
    pub fn new() -> SubRole {
        SubRole {
            parent_role_id: None,
            name: None,
            id: None,
            active_flag: None,
            assignment_count: None,
            sub_role_count: None,
        }
    }
}


