/*
 * Pipedrive API v1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct PersonItemAllOfPictureId {
    /// The ID of the picture associated with the item
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// The type of item the picture is related to
    #[serde(rename = "item_type", skip_serializing_if = "Option::is_none")]
    pub item_type: Option<String>,
    /// The ID of related item
    #[serde(rename = "item_id", skip_serializing_if = "Option::is_none")]
    pub item_id: Option<i32>,
    /// Whether the associated picture is active or not
    #[serde(rename = "active_flag", skip_serializing_if = "Option::is_none")]
    pub active_flag: Option<bool>,
    /// The add time of the picture
    #[serde(rename = "add_time", skip_serializing_if = "Option::is_none")]
    pub add_time: Option<String>,
    /// The update time of the picture
    #[serde(rename = "update_time", skip_serializing_if = "Option::is_none")]
    pub update_time: Option<String>,
    /// The ID of the user who added the picture
    #[serde(rename = "added_by_user_id", skip_serializing_if = "Option::is_none")]
    pub added_by_user_id: Option<i32>,
    #[serde(rename = "pictures", skip_serializing_if = "Option::is_none")]
    pub pictures: Option<Box<crate::models::PersonItemAllOfPictureIdAllOfPictures>>,
}

impl PersonItemAllOfPictureId {
    pub fn new() -> PersonItemAllOfPictureId {
        PersonItemAllOfPictureId {
            id: None,
            item_type: None,
            item_id: None,
            active_flag: None,
            add_time: None,
            update_time: None,
            added_by_user_id: None,
            pictures: None,
        }
    }
}


