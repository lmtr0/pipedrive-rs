/*
 * Pipedrive API v1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct AddOrganizationRelationshipResponse200AllOfData {
    /// The ID of the organization relationship
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// The type of the relationship
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "rel_owner_org_id", skip_serializing_if = "Option::is_none")]
    pub rel_owner_org_id: Option<Box<crate::models::RelationshipOrganizationInfoItem>>,
    #[serde(rename = "rel_linked_org_id", skip_serializing_if = "Option::is_none")]
    pub rel_linked_org_id: Option<Box<crate::models::RelationshipOrganizationInfoItem>>,
    /// The creation date and time of the relationship
    #[serde(rename = "add_time", skip_serializing_if = "Option::is_none")]
    pub add_time: Option<String>,
    /// The last updated date and time of the relationship
    #[serde(rename = "update_time", skip_serializing_if = "Option::is_none")]
    pub update_time: Option<String>,
    /// Whether the relationship is active or not
    #[serde(rename = "active_flag", skip_serializing_if = "Option::is_none")]
    pub active_flag: Option<String>,
}

impl AddOrganizationRelationshipResponse200AllOfData {
    pub fn new() -> AddOrganizationRelationshipResponse200AllOfData {
        AddOrganizationRelationshipResponse200AllOfData {
            id: None,
            r#type: None,
            rel_owner_org_id: None,
            rel_linked_org_id: None,
            add_time: None,
            update_time: None,
            active_flag: None,
        }
    }
}


