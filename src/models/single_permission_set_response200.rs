/*
 * Pipedrive API v1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SinglePermissionSetResponse200 {
    /// The ID of user permission set
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The name of the permission set
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The description of the permission set
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The app that permission set belongs to
    #[serde(rename = "app", skip_serializing_if = "Option::is_none")]
    pub app: Option<App>,
    /// The type of permission set
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Type>,
    /// The number of users assigned to this permission set
    #[serde(rename = "assignment_count", skip_serializing_if = "Option::is_none")]
    pub assignment_count: Option<i32>,
    /// A permission assigned to this permission set
    #[serde(rename = "contents", skip_serializing_if = "Option::is_none")]
    pub contents: Option<Vec<String>>,
}

impl SinglePermissionSetResponse200 {
    pub fn new() -> SinglePermissionSetResponse200 {
        SinglePermissionSetResponse200 {
            id: None,
            name: None,
            description: None,
            app: None,
            r#type: None,
            assignment_count: None,
            contents: None,
        }
    }
}

/// The app that permission set belongs to
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum App {
    #[serde(rename = "sales")]
    Sales,
    #[serde(rename = "projects")]
    Projects,
    #[serde(rename = "campaigns")]
    Campaigns,
    #[serde(rename = "global")]
    Global,
    #[serde(rename = "account_settings")]
    AccountSettings,
}

impl Default for App {
    fn default() -> App {
        Self::Sales
    }
}
/// The type of permission set
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "admin")]
    Admin,
    #[serde(rename = "manager")]
    Manager,
    #[serde(rename = "regular")]
    Regular,
    #[serde(rename = "custom")]
    Custom,
}

impl Default for Type {
    fn default() -> Type {
        Self::Admin
    }
}

