/*
 * Pipedrive API v1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// StageResponse200Data : Updated stage object



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct StageResponse200Data {
    /// The ID of the stage
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// Defines the order of the stage
    #[serde(rename = "order_nr", skip_serializing_if = "Option::is_none")]
    pub order_nr: Option<i32>,
    /// The name of the stage
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Whether the stage is active or deleted
    #[serde(rename = "active_flag", skip_serializing_if = "Option::is_none")]
    pub active_flag: Option<bool>,
    /// The success probability percentage of the deal. Used/shown when the deal weighted values are used.
    #[serde(rename = "deal_probability", skip_serializing_if = "Option::is_none")]
    pub deal_probability: Option<i32>,
    /// The ID of the pipeline to add the stage to
    #[serde(rename = "pipeline_id", skip_serializing_if = "Option::is_none")]
    pub pipeline_id: Option<i32>,
    /// Whether deals in this stage can become rotten
    #[serde(rename = "rotten_flag", skip_serializing_if = "Option::is_none")]
    pub rotten_flag: Option<bool>,
    /// The number of days the deals not updated in this stage would become rotten. Applies only if the `rotten_flag` is set.
    #[serde(rename = "rotten_days", skip_serializing_if = "Option::is_none")]
    pub rotten_days: Option<i32>,
    /// The stage creation time. Format: YYYY-MM-DD HH:MM:SS.
    #[serde(rename = "add_time", skip_serializing_if = "Option::is_none")]
    pub add_time: Option<String>,
    /// The stage update time. Format: YYYY-MM-DD HH:MM:SS.
    #[serde(rename = "update_time", skip_serializing_if = "Option::is_none")]
    pub update_time: Option<String>,
}

impl StageResponse200Data {
    /// Updated stage object
    pub fn new() -> StageResponse200Data {
        StageResponse200Data {
            id: None,
            order_nr: None,
            name: None,
            active_flag: None,
            deal_probability: None,
            pipeline_id: None,
            rotten_flag: None,
            rotten_days: None,
            add_time: None,
            update_time: None,
        }
    }
}


