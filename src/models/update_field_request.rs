/*
 * Pipedrive API v1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateFieldRequest {
    /// The name of the field
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// When `field_type` is either set or enum, possible options must be supplied as a JSON-encoded sequential array of objects. All active items must be supplied and already existing items must have their ID supplied. New items only require a label. Example: `[{\"id\":123,\"label\":\"Existing Item\"},{\"label\":\"New Item\"}]`
    #[serde(rename = "options", skip_serializing_if = "Option::is_none")]
    pub options: Option<String>,
    /// Whether the field is available in 'add new' modal or not (both in web and mobile app)
    #[serde(rename = "add_visible_flag", skip_serializing_if = "Option::is_none")]
    pub add_visible_flag: Option<bool>,
}

impl UpdateFieldRequest {
    pub fn new() -> UpdateFieldRequest {
        UpdateFieldRequest {
            name: None,
            options: None,
            add_visible_flag: None,
        }
    }
}


