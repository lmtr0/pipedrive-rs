/*
 * Pipedrive API v1
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// GetAssociatedFilesResponse200AllOfDataInner : The file data



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetAssociatedFilesResponse200AllOfDataInner {
    /// The ID of the file
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// The ID of the user to associate the file with
    #[serde(rename = "user_id", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<i32>,
    /// The ID of the deal to associate the file with
    #[serde(rename = "deal_id", skip_serializing_if = "Option::is_none")]
    pub deal_id: Option<i32>,
    /// The ID of the person to associate the file with
    #[serde(rename = "person_id", skip_serializing_if = "Option::is_none")]
    pub person_id: Option<i32>,
    /// The ID of the organization to associate the file with
    #[serde(rename = "org_id", skip_serializing_if = "Option::is_none")]
    pub org_id: Option<i32>,
    /// The ID of the product to associate the file with
    #[serde(rename = "product_id", skip_serializing_if = "Option::is_none")]
    pub product_id: Option<i32>,
    /// The ID of the activity to associate the file with
    #[serde(rename = "activity_id", skip_serializing_if = "Option::is_none")]
    pub activity_id: Option<i32>,
    /// The ID of the lead to associate the file with
    #[serde(rename = "lead_id", skip_serializing_if = "Option::is_none")]
    pub lead_id: Option<uuid::Uuid>,
    /// The date and time when the file was added/created. Format: YYYY-MM-DD HH:MM:SS
    #[serde(rename = "add_time", skip_serializing_if = "Option::is_none")]
    pub add_time: Option<String>,
    /// The last updated date and time of the file. Format: YYYY-MM-DD HH:MM:SS
    #[serde(rename = "update_time", skip_serializing_if = "Option::is_none")]
    pub update_time: Option<String>,
    /// The original name of the file
    #[serde(rename = "file_name", skip_serializing_if = "Option::is_none")]
    pub file_name: Option<String>,
    /// The size of the file
    #[serde(rename = "file_size", skip_serializing_if = "Option::is_none")]
    pub file_size: Option<i32>,
    /// Whether the user is active or not. false = Not activated, true = Activated
    #[serde(rename = "active_flag", skip_serializing_if = "Option::is_none")]
    pub active_flag: Option<bool>,
    /// Whether the file was uploaded as inline or not
    #[serde(rename = "inline_flag", skip_serializing_if = "Option::is_none")]
    pub inline_flag: Option<bool>,
    /// The location type to send the file to. Only googledrive is supported at the moment.
    #[serde(rename = "remote_location", skip_serializing_if = "Option::is_none")]
    pub remote_location: Option<String>,
    /// The ID of the remote item
    #[serde(rename = "remote_id", skip_serializing_if = "Option::is_none")]
    pub remote_id: Option<String>,
    /// The ID of the inline attachment
    #[serde(rename = "cid", skip_serializing_if = "Option::is_none")]
    pub cid: Option<String>,
    /// The location of the cloud storage
    #[serde(rename = "s3_bucket", skip_serializing_if = "Option::is_none")]
    pub s3_bucket: Option<String>,
    /// The ID of the mail message to associate the file with
    #[serde(rename = "mail_message_id", skip_serializing_if = "Option::is_none")]
    pub mail_message_id: Option<String>,
    /// The ID of the mail template to associate the file with
    #[serde(rename = "mail_template_id", skip_serializing_if = "Option::is_none")]
    pub mail_template_id: Option<String>,
    /// The name of the deal associated with the dile
    #[serde(rename = "deal_name", skip_serializing_if = "Option::is_none")]
    pub deal_name: Option<String>,
    /// The name of the person associated with the file
    #[serde(rename = "person_name", skip_serializing_if = "Option::is_none")]
    pub person_name: Option<String>,
    /// The name of the organization associated with the file
    #[serde(rename = "org_name", skip_serializing_if = "Option::is_none")]
    pub org_name: Option<String>,
    /// The name of the product associated with the file
    #[serde(rename = "product_name", skip_serializing_if = "Option::is_none")]
    pub product_name: Option<String>,
    /// The name of the lead associated with the file
    #[serde(rename = "lead_name", skip_serializing_if = "Option::is_none")]
    pub lead_name: Option<String>,
    /// The URL of the download file
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    /// The visible name of the file
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The description of the file
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
}

impl GetAssociatedFilesResponse200AllOfDataInner {
    /// The file data
    pub fn new() -> GetAssociatedFilesResponse200AllOfDataInner {
        GetAssociatedFilesResponse200AllOfDataInner {
            id: None,
            user_id: None,
            deal_id: None,
            person_id: None,
            org_id: None,
            product_id: None,
            activity_id: None,
            lead_id: None,
            add_time: None,
            update_time: None,
            file_name: None,
            file_size: None,
            active_flag: None,
            inline_flag: None,
            remote_location: None,
            remote_id: None,
            cid: None,
            s3_bucket: None,
            mail_message_id: None,
            mail_template_id: None,
            deal_name: None,
            person_name: None,
            org_name: None,
            product_name: None,
            lead_name: None,
            url: None,
            name: None,
            description: None,
        }
    }
}


